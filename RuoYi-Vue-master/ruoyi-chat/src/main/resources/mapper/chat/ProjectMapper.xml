<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chat.ruoyichat.mapper.ProjectMapper">
    
    <resultMap type="Project" id="ProjectResult">
        <result property="projectId"    column="project_id"    />
        <result property="projectName"    column="project_name"    />
        <result property="description"    column="description"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateUser"    column="update_user"    />
        <result property="createUser"    column="create_user"    />
        <result property="projectStatus"    column="project_status"    />
    </resultMap>

    <sql id="selectProjectVo">
        select project_id, project_name, description, create_time, update_time, update_user, create_user, project_status from project
    </sql>

    <select id="selectProjectList" parameterType="Project" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        <where>  
            <if test="projectId != null  and projectId != ''"> and project_id = #{projectId}</if>
            <if test="projectName != null  and projectName != ''"> and project_name like concat('%', #{projectName}, '%')</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
            <if test="updateUser != null  and updateUser != ''"> and update_user = #{updateUser}</if>
            <if test="createUser != null  and createUser != ''"> and create_user = #{createUser}</if>
            <if test="projectStatus != null "> and project_status = #{projectStatus}</if>
        </where>
    </select>
    
    <select id="selectProjectByProjectId" parameterType="String" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        where project_id = #{projectId}
    </select>

    <insert id="insertProject" parameterType="Project">
        insert into project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectId != null">project_id,</if>
            <if test="projectName != null and projectName != ''">project_name,</if>
            <if test="description != null">description,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateUser != null">update_user,</if>
            <if test="createUser != null">create_user,</if>
            <if test="projectStatus != null">project_status,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectId != null">#{projectId},</if>
            <if test="projectName != null and projectName != ''">#{projectName},</if>
            <if test="description != null">#{description},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateUser != null">#{updateUser},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="projectStatus != null">#{projectStatus},</if>
         </trim>
    </insert>

    <update id="updateProject" parameterType="Project">
        update project
        <trim prefix="SET" suffixOverrides=",">
            <if test="projectName != null and projectName != ''">project_name = #{projectName},</if>
            <if test="description != null">description = #{description},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
            <if test="createUser != null">create_user = #{createUser},</if>
            <if test="projectStatus != null">project_status = #{projectStatus},</if>
        </trim>
        where project_id = #{projectId}
    </update>

    <delete id="deleteProjectByProjectId" parameterType="String">
        delete from project where project_id = #{projectId}
    </delete>

    <delete id="deleteProjectByProjectIds" parameterType="String">
        delete from project where project_id in 
        <foreach item="projectId" collection="array" open="(" separator="," close=")">
            #{projectId}
        </foreach>
    </delete>

    <select id="selectProjectByIdList" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        where
        project_id IN
        <foreach item="id" collection="collection" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
</mapper>